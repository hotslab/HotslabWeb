// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Sex {
  male
  female
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  active    Boolean  @default(true)
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String
  surname     String
  profile     Profile?
  client      Client?
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      Int      @unique
  active      Boolean  @default(true)
  showProfile Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Client {
  id          Int             @id @default(autoincrement())
  user        User            @relation(fields: [userId], references: [id])
  userId      Int             @unique
  imageUrl    String?
  idNumber    String?
  dob         DateTime?       @db.Date
  sex         Sex
  countryCode Int?
  phoneNumber Int?
  address     String?
  city        String?
  country     String?
  postcode    String?
  projects    ProjectClient[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Profile {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int          @unique
  imageUrl    String?
  idNumber    String?
  dob         DateTime?    @db.Date
  sex         Sex
  countryCode Int?
  phoneNumber Int?
  address     String?
  city        String?
  country     String?
  postcode    String?
  summary     String?
  experiences Experience[]
  educations  Education[]
  projects    Project[]
  interests   Interest[]
  links       Link[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Skill {
  id         Int               @id @default(autoincrement())
  name       String            @unique
  experience ExperienceSkill[]
  projects   ProjectSkill[]
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model Experience {
  id                Int                 @id @default(autoincrement())
  profile           Profile             @relation(fields: [profileId], references: [id])
  profileId         Int                 @unique
  role              String
  employmentType    String
  companyName       String
  location          String
  locationType      String
  isCurrentPosition Boolean
  startDate         DateTime            @db.Date
  enddDate          DateTime            @db.Date
  industry          String
  description       String
  orderNumber       Int
  skills            ExperienceSkill[]
  projects          ProjectExperience[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model ExperienceSkill {
  id           Int        @id @default(autoincrement())
  experience   Experience @relation(fields: [experienceId], references: [id])
  experienceId Int        @unique
  skill        Skill      @relation(fields: [skillId], references: [id])
  skillId      Int        @unique
  orderNumber  Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Project {
  id          Int                 @id @default(autoincrement())
  profile     Profile             @relation(fields: [profileId], references: [id])
  profileId   Int                 @unique
  projectName String
  isOngoing   Boolean
  startDate   DateTime            @db.Date
  enddDate    DateTime            @db.Date
  description String
  orderNumber Int
  skills      ProjectSkill[]
  images      ProjectImage[]
  tags        ProjectTag[]
  experiences ProjectExperience[]
  clients     ProjectClient[]
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
}

model ProjectClient {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int      @unique
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectExperience {
  id           Int        @id @default(autoincrement())
  project      Project    @relation(fields: [projectId], references: [id])
  projectId    Int        @unique
  experience   Experience @relation(fields: [experienceId], references: [id])
  experienceId Int        @unique
  orderNumber  Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model ProjectSkill {
  id          Int      @id @default(autoincrement())
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   Int      @unique
  skill       Skill    @relation(fields: [skillId], references: [id])
  skillId     Int      @unique
  orderNumber Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProjectImage {
  id        Int      @id @default(autoincrement())
  url       String
  caption   String
  post      Project  @relation(fields: [projectId], references: [id])
  projectId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectTag {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Education {
  id          Int      @id @default(autoincrement())
  profile     Profile  @relation(fields: [profileId], references: [id])
  profileId   Int      @unique
  school      String
  title       String
  description String
  startDate   DateTime @db.Date
  endDate     DateTime @db.Date
  orderNumber Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  projects  ProjectTag[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Interest {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Link {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  url       String   @unique
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
